#compdef fwd

# init                  initialize a project.
# explain               explains the current context.
# config <options>      gets or sets variables in dotenv file.
# backup <options>      backs up a DB.
# restore <options>     restores a DB backup.
# list, ls <options>    list project dotenv files.
# rm <options>          remove project dotenv file.
# switch, s <options>   switch the project's dotenv file.
#
# Use 'fwd <subcommand> --help' for additional information.
#
# OPTIONS:
#
#     --project <string>    specify the project name.
#     --root <string>       specify the path to `fwd` artifacts.
#     --squelch             squelch errors
#     --format <standard|json>
#                           format
#     --help                display this list of options.

function _fwd() {
  local line state

  _arguments -C \
    '1: :->cmds'\
    '*::arg:->args'

  case $state in
    cmds)
      _values 'Forward (fwd)' \
        'init[initialize a project]' \
        'explain[explains the current context]' \
        'config[gets or sets variables in a dotenv file]' \
        'backup[backs up a DB]' \
        'restore[restores a DB backup]' \
        'ls[list project dotenv files]' \
        'rm[remove a dotenv file]' \
        's[switch the project dotenv file]' \
        '--project[specify the project name]' \
        '--root[specify path to `fwd` artifacts]' \
        '--squelch[squelch errors]' \
        '--format[standard or json]' \
        '--help[display list of options and arguments]'
    ;;
    *)
      case $line[1] in
        s)
          dotenvs=($(fwd --squelch ls -t))
          _arguments "*:dotenv:($dotenvs)"
        ;;
        rm)
          dotenvs=($(fwd --squelch ls -t))
          _arguments "*:dotenv:($dotenvs)"
        ;;
      esac
    ;;
  esac
}

_fwd "$@"
